<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isoftstone.dao.acl.UserDao" >
    <resultMap id="User" type="ACLUser">
        <result property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="password" column="password" />
        <result property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="peopleId" column="idpeople" />
        <result property="peopleName" column="name" />
        <result property="orgId" column="idorg" />
        <result property="orgName" column="company_name" />
    </resultMap>

    <select id="listAll" resultMap="User">
        select 
            u.id,u.user_id,u.password, r.id as role_id, r.role_name, p.idpeople, p.name, o.idorg, o.company_name
        from
            t_user u
        left join t_user_role_link ur on u.id = ur.user_id
        left join t_role r on ur.role_id = r.id
        left join t_people p on u.people_id = p.idpeople
        left join t_org o on u.org_id = o.idorg
    </select>
    
    <delete id="delete" parameterType="String">
        delete from t_user where id = #{id}
    </delete>
    
    <update id="update" parameterType="ACLUser">
        update t_user 
           set password = #{password},
               people_id = #{peopleId},
               org_id = #{orgId}
         where id = #{id}
    </update>
    
    <insert id="insert" parameterType="ACLUser">
        insert into t_user (id, user_id, password, people_id, org_id)
        values (#{id}, #{userId}, #{password}, #{peopleId}, #{orgId})
    </insert>
    
    <insert id="insertRoleLink" parameterType="hashmap">
        insert into t_user_role_link (id, user_id, role_id)
        values (#{id}, #{userId}, #{roleId})
    </insert>
    
    <update id="updateRoleLink" parameterType="hashmap">
        update t_user_role_link 
           set role_id = #{roleId}
         where user_id = #{userId}
    </update>
    
    <delete id="deleteRoleLink" parameterType="String">
        delete from t_user_role_link where user_id = #{userId}
    </delete>
    
    <select id="findUserById" resultMap="User"  parameterType="String">
        select 
            u.id, u.user_id,u.password, r.id as role_id, r.role_name, p.idpeople, p.name, o.idorg, o.company_name
        from
            t_user u
        left join t_user_role_link ur on u.id = ur.user_id
        left join t_role r on ur.role_id = r.id
        left join t_people p on u.people_id = p.idpeople
        left join t_org o on u.org_id = o.idorg
        where u.user_id = #{userId}
    </select>
</mapper>